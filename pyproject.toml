[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "openworld-multimodal"
version = "2.0.0"
description = "Advanced Multimodal World Modeling with Transformer Architecture and MLX Optimization"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Nik Jois", email = "nikjois@llamasearch.ai"}]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.1.0",
    "transformers>=4.36.0",
    "datasets>=2.16.0",
    "accelerate>=0.25.0",
    "einops>=0.7.0",
    "numpy>=1.24.0,<2.0",
    "scipy>=1.11.0",
    "pandas>=2.1.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.13.0",
    "tensorboard>=2.15.0",
    "wandb>=0.16.0",
    "opencv-python>=4.8.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "scikit-learn>=1.3.0",
    "scikit-image>=0.22.0",
    "tqdm>=4.66.0",
    "click>=8.1.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "rich>=13.7.0",
    "httpx>=0.25.0",
    "uvloop>=0.19.0;platform_system!='Windows'",
]

[project.optional-dependencies]
mlx = [
    "mlx>=0.5.0",
    "mlx-lm>=0.0.6",
]
ui = [
    "gradio>=4.12.0",
    "streamlit>=1.29.0",
    "plotly>=5.18.0",
    "dash>=2.14.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.5.0",
    "ruff>=0.1.9",
    "black>=23.12.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "ipdb>=0.13.0",
    "jupyter>=1.0.0",
]

[project.scripts]
openworld = "openworld.cli.main:main"

[project.urls]
Homepage = "https://github.com/nikjois/openworld-multimodal"
Documentation = "https://openworld-multimodal.readthedocs.io"
Repository = "https://github.com/nikjois/openworld-multimodal"
Issues = "https://github.com/nikjois/openworld-multimodal/issues"

[tool.hatch.version]
path = "openworld/__version__.py"

[tool.hatch.build.targets.wheel]
packages = ["openworld"]

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "I", "N", "UP", "YTT", "B", "A", "C4", "DTZ", "T10", "ISC", "ICN", "INP", "PIE", "PT", "RET", "SIM", "ARG", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["E501", "B008", "RET504", "S101", "A003", "ARG002", "PLR0913"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests requiring GPU",
    "mlx: marks tests requiring MLX",
]

[tool.coverage.run]
branch = true
source = ["openworld"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
] 